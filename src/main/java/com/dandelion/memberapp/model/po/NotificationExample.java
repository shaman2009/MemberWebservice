package com.dandelion.memberapp.model.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class NotificationExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public NotificationExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkIsNull() {
			addCriterion("FromUserIDFK is null");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkIsNotNull() {
			addCriterion("FromUserIDFK is not null");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkEqualTo(Long value) {
			addCriterion("FromUserIDFK =", value, "fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkNotEqualTo(Long value) {
			addCriterion("FromUserIDFK <>", value, "fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkGreaterThan(Long value) {
			addCriterion("FromUserIDFK >", value, "fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkGreaterThanOrEqualTo(Long value) {
			addCriterion("FromUserIDFK >=", value, "fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkLessThan(Long value) {
			addCriterion("FromUserIDFK <", value, "fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkLessThanOrEqualTo(Long value) {
			addCriterion("FromUserIDFK <=", value, "fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkIn(List<Long> values) {
			addCriterion("FromUserIDFK in", values, "fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkNotIn(List<Long> values) {
			addCriterion("FromUserIDFK not in", values, "fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkBetween(Long value1, Long value2) {
			addCriterion("FromUserIDFK between", value1, value2, "fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andFromuseridfkNotBetween(Long value1, Long value2) {
			addCriterion("FromUserIDFK not between", value1, value2,
					"fromuseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkIsNull() {
			addCriterion("ToUserIDFK is null");
			return (Criteria) this;
		}

		public Criteria andTouseridfkIsNotNull() {
			addCriterion("ToUserIDFK is not null");
			return (Criteria) this;
		}

		public Criteria andTouseridfkEqualTo(Long value) {
			addCriterion("ToUserIDFK =", value, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkNotEqualTo(Long value) {
			addCriterion("ToUserIDFK <>", value, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkGreaterThan(Long value) {
			addCriterion("ToUserIDFK >", value, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkGreaterThanOrEqualTo(Long value) {
			addCriterion("ToUserIDFK >=", value, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkLessThan(Long value) {
			addCriterion("ToUserIDFK <", value, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkLessThanOrEqualTo(Long value) {
			addCriterion("ToUserIDFK <=", value, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkIn(List<Long> values) {
			addCriterion("ToUserIDFK in", values, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkNotIn(List<Long> values) {
			addCriterion("ToUserIDFK not in", values, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkBetween(Long value1, Long value2) {
			addCriterion("ToUserIDFK between", value1, value2, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andTouseridfkNotBetween(Long value1, Long value2) {
			addCriterion("ToUserIDFK not between", value1, value2, "touseridfk");
			return (Criteria) this;
		}

		public Criteria andContentIsNull() {
			addCriterion("Content is null");
			return (Criteria) this;
		}

		public Criteria andContentIsNotNull() {
			addCriterion("Content is not null");
			return (Criteria) this;
		}

		public Criteria andContentEqualTo(String value) {
			addCriterion("Content =", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotEqualTo(String value) {
			addCriterion("Content <>", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThan(String value) {
			addCriterion("Content >", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThanOrEqualTo(String value) {
			addCriterion("Content >=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThan(String value) {
			addCriterion("Content <", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThanOrEqualTo(String value) {
			addCriterion("Content <=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLike(String value) {
			addCriterion("Content like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotLike(String value) {
			addCriterion("Content not like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentIn(List<String> values) {
			addCriterion("Content in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotIn(List<String> values) {
			addCriterion("Content not in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentBetween(String value1, String value2) {
			addCriterion("Content between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotBetween(String value1, String value2) {
			addCriterion("Content not between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andIsreadIsNull() {
			addCriterion("IsRead is null");
			return (Criteria) this;
		}

		public Criteria andIsreadIsNotNull() {
			addCriterion("IsRead is not null");
			return (Criteria) this;
		}

		public Criteria andIsreadEqualTo(Boolean value) {
			addCriterion("IsRead =", value, "isread");
			return (Criteria) this;
		}

		public Criteria andIsreadNotEqualTo(Boolean value) {
			addCriterion("IsRead <>", value, "isread");
			return (Criteria) this;
		}

		public Criteria andIsreadGreaterThan(Boolean value) {
			addCriterion("IsRead >", value, "isread");
			return (Criteria) this;
		}

		public Criteria andIsreadGreaterThanOrEqualTo(Boolean value) {
			addCriterion("IsRead >=", value, "isread");
			return (Criteria) this;
		}

		public Criteria andIsreadLessThan(Boolean value) {
			addCriterion("IsRead <", value, "isread");
			return (Criteria) this;
		}

		public Criteria andIsreadLessThanOrEqualTo(Boolean value) {
			addCriterion("IsRead <=", value, "isread");
			return (Criteria) this;
		}

		public Criteria andIsreadIn(List<Boolean> values) {
			addCriterion("IsRead in", values, "isread");
			return (Criteria) this;
		}

		public Criteria andIsreadNotIn(List<Boolean> values) {
			addCriterion("IsRead not in", values, "isread");
			return (Criteria) this;
		}

		public Criteria andIsreadBetween(Boolean value1, Boolean value2) {
			addCriterion("IsRead between", value1, value2, "isread");
			return (Criteria) this;
		}

		public Criteria andIsreadNotBetween(Boolean value1, Boolean value2) {
			addCriterion("IsRead not between", value1, value2, "isread");
			return (Criteria) this;
		}

		public Criteria andIsdeletedIsNull() {
			addCriterion("IsDeleted is null");
			return (Criteria) this;
		}

		public Criteria andIsdeletedIsNotNull() {
			addCriterion("IsDeleted is not null");
			return (Criteria) this;
		}

		public Criteria andIsdeletedEqualTo(Boolean value) {
			addCriterion("IsDeleted =", value, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andIsdeletedNotEqualTo(Boolean value) {
			addCriterion("IsDeleted <>", value, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andIsdeletedGreaterThan(Boolean value) {
			addCriterion("IsDeleted >", value, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andIsdeletedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("IsDeleted >=", value, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andIsdeletedLessThan(Boolean value) {
			addCriterion("IsDeleted <", value, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andIsdeletedLessThanOrEqualTo(Boolean value) {
			addCriterion("IsDeleted <=", value, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andIsdeletedIn(List<Boolean> values) {
			addCriterion("IsDeleted in", values, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andIsdeletedNotIn(List<Boolean> values) {
			addCriterion("IsDeleted not in", values, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andIsdeletedBetween(Boolean value1, Boolean value2) {
			addCriterion("IsDeleted between", value1, value2, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andIsdeletedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("IsDeleted not between", value1, value2, "isdeleted");
			return (Criteria) this;
		}

		public Criteria andCreateddateIsNull() {
			addCriterion("CreatedDate is null");
			return (Criteria) this;
		}

		public Criteria andCreateddateIsNotNull() {
			addCriterion("CreatedDate is not null");
			return (Criteria) this;
		}

		public Criteria andCreateddateEqualTo(Date value) {
			addCriterion("CreatedDate =", value, "createddate");
			return (Criteria) this;
		}

		public Criteria andCreateddateNotEqualTo(Date value) {
			addCriterion("CreatedDate <>", value, "createddate");
			return (Criteria) this;
		}

		public Criteria andCreateddateGreaterThan(Date value) {
			addCriterion("CreatedDate >", value, "createddate");
			return (Criteria) this;
		}

		public Criteria andCreateddateGreaterThanOrEqualTo(Date value) {
			addCriterion("CreatedDate >=", value, "createddate");
			return (Criteria) this;
		}

		public Criteria andCreateddateLessThan(Date value) {
			addCriterion("CreatedDate <", value, "createddate");
			return (Criteria) this;
		}

		public Criteria andCreateddateLessThanOrEqualTo(Date value) {
			addCriterion("CreatedDate <=", value, "createddate");
			return (Criteria) this;
		}

		public Criteria andCreateddateIn(List<Date> values) {
			addCriterion("CreatedDate in", values, "createddate");
			return (Criteria) this;
		}

		public Criteria andCreateddateNotIn(List<Date> values) {
			addCriterion("CreatedDate not in", values, "createddate");
			return (Criteria) this;
		}

		public Criteria andCreateddateBetween(Date value1, Date value2) {
			addCriterion("CreatedDate between", value1, value2, "createddate");
			return (Criteria) this;
		}

		public Criteria andCreateddateNotBetween(Date value1, Date value2) {
			addCriterion("CreatedDate not between", value1, value2,
					"createddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateIsNull() {
			addCriterion("ModifiedDate is null");
			return (Criteria) this;
		}

		public Criteria andModifieddateIsNotNull() {
			addCriterion("ModifiedDate is not null");
			return (Criteria) this;
		}

		public Criteria andModifieddateEqualTo(Date value) {
			addCriterion("ModifiedDate =", value, "modifieddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateNotEqualTo(Date value) {
			addCriterion("ModifiedDate <>", value, "modifieddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateGreaterThan(Date value) {
			addCriterion("ModifiedDate >", value, "modifieddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateGreaterThanOrEqualTo(Date value) {
			addCriterion("ModifiedDate >=", value, "modifieddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateLessThan(Date value) {
			addCriterion("ModifiedDate <", value, "modifieddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateLessThanOrEqualTo(Date value) {
			addCriterion("ModifiedDate <=", value, "modifieddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateIn(List<Date> values) {
			addCriterion("ModifiedDate in", values, "modifieddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateNotIn(List<Date> values) {
			addCriterion("ModifiedDate not in", values, "modifieddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateBetween(Date value1, Date value2) {
			addCriterion("ModifiedDate between", value1, value2, "modifieddate");
			return (Criteria) this;
		}

		public Criteria andModifieddateNotBetween(Date value1, Date value2) {
			addCriterion("ModifiedDate not between", value1, value2,
					"modifieddate");
			return (Criteria) this;
		}

		public Criteria andSortIsNull() {
			addCriterion("Sort is null");
			return (Criteria) this;
		}

		public Criteria andSortIsNotNull() {
			addCriterion("Sort is not null");
			return (Criteria) this;
		}

		public Criteria andSortEqualTo(Integer value) {
			addCriterion("Sort =", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortNotEqualTo(Integer value) {
			addCriterion("Sort <>", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortGreaterThan(Integer value) {
			addCriterion("Sort >", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortGreaterThanOrEqualTo(Integer value) {
			addCriterion("Sort >=", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortLessThan(Integer value) {
			addCriterion("Sort <", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortLessThanOrEqualTo(Integer value) {
			addCriterion("Sort <=", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortIn(List<Integer> values) {
			addCriterion("Sort in", values, "sort");
			return (Criteria) this;
		}

		public Criteria andSortNotIn(List<Integer> values) {
			addCriterion("Sort not in", values, "sort");
			return (Criteria) this;
		}

		public Criteria andSortBetween(Integer value1, Integer value2) {
			addCriterion("Sort between", value1, value2, "sort");
			return (Criteria) this;
		}

		public Criteria andSortNotBetween(Integer value1, Integer value2) {
			addCriterion("Sort not between", value1, value2, "sort");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table tb_notification
	 * @mbggenerated  Thu Jan 16 19:58:43 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_notification
     *
     * @mbggenerated do_not_delete_during_merge Wed Jan 01 10:43:49 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}